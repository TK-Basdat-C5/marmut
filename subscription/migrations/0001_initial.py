# Generated by Django 5.0.4 on 2024-05-19 12:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Akun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.IntegerField(default=0)),
                ('tempat_lahir', models.CharField(max_length=50)),
                ('tanggal_lahir', models.DateField()),
                ('is_verified', models.BooleanField(default=False)),
                ('kota_asal', models.CharField(max_length=50)),
                ('premium_user', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GENRE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KONTEN',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('judul', models.CharField(max_length=100)),
                ('tanggal_rilis', models.DateField(default=django.utils.timezone.now)),
                ('tahun', models.IntegerField()),
                ('durasi', models.IntegerField()),
                ('genre', models.ManyToManyField(blank=True, to='subscription.genre')),
            ],
        ),
        migrations.CreateModel(
            name='LABEL',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nama', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('kontak', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PAKET',
            fields=[
                ('jenis', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('harga', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PEMILIK_HAK_CIPTA',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rate_royalti', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PLAYLIST',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PODCASTER',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='subscription.akun')),
            ],
        ),
        migrations.CreateModel(
            name='PREMIUM',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='subscription.akun')),
            ],
        ),
        migrations.CreateModel(
            name='ALBUM',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('judul', models.CharField(max_length=100)),
                ('jumlah_lagu', models.IntegerField(default=0)),
                ('total_durasi', models.IntegerField(default=0)),
                ('id_label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.label')),
            ],
        ),
        migrations.AddField(
            model_name='label',
            name='id_pemilik_hak_cipta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.pemilik_hak_cipta'),
        ),
        migrations.CreateModel(
            name='ARTIST',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_akun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.akun')),
                ('id_pemilik_hak_cipta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.pemilik_hak_cipta')),
            ],
        ),
        migrations.CreateModel(
            name='CHART',
            fields=[
                ('tipe', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('id_playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.playlist')),
            ],
        ),
        migrations.AddField(
            model_name='akun',
            name='role',
            field=models.ManyToManyField(blank=True, to='subscription.role'),
        ),
        migrations.CreateModel(
            name='TRANSACTION',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp_dimulai', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_berakhir', models.DateTimeField(blank=True, null=True)),
                ('metode_bayar', models.CharField(max_length=50)),
                ('nominal', models.IntegerField()),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.akun')),
                ('jenis_paket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.paket')),
            ],
        ),
        migrations.CreateModel(
            name='USER_PLAYLIST',
            fields=[
                ('id_user_playlist', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('judul', models.CharField(max_length=100)),
                ('deskripsi', models.TextField()),
                ('jumlah_lagu', models.IntegerField(default=0)),
                ('tanggal_dibuat', models.DateField(default=django.utils.timezone.now)),
                ('total_durasi', models.IntegerField(default=0)),
                ('email_pembuat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.akun')),
                ('id_playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='PODCAST',
            fields=[
                ('id_konten', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='subscription.konten')),
                ('email_podcaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.podcaster')),
            ],
        ),
        migrations.CreateModel(
            name='EPISODE',
            fields=[
                ('id_episode', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('judul', models.CharField(max_length=100)),
                ('deskripsi', models.TextField()),
                ('durasi', models.IntegerField()),
                ('tanggal_rilis', models.DateField(default=django.utils.timezone.now)),
                ('id_konten_podcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.podcast')),
            ],
        ),
        migrations.CreateModel(
            name='SONG',
            fields=[
                ('id_konten', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='subscription.konten')),
                ('total_play', models.IntegerField(default=0)),
                ('total_download', models.IntegerField(default=0)),
                ('id_album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='subscription.album')),
                ('id_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.artist')),
            ],
        ),
        migrations.CreateModel(
            name='ROYALTI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jumlah', models.IntegerField()),
                ('id_pemilik_hak_cipta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.pemilik_hak_cipta')),
                ('id_song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.song')),
            ],
        ),
        migrations.CreateModel(
            name='AKUN_PLAY_USER_PLAYLIST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waktu', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_pemain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.akun')),
                ('id_user_playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.user_playlist')),
            ],
            options={
                'unique_together': {('email_pemain', 'id_user_playlist', 'waktu')},
            },
        ),
        migrations.CreateModel(
            name='PLAYLIST_SONG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('durasi', models.IntegerField()),
                ('id_playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.playlist')),
                ('id_song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.song')),
            ],
            options={
                'unique_together': {('id_playlist', 'id_song')},
            },
        ),
        migrations.CreateModel(
            name='DOWNLOADED_SONG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_dimulai', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_downloader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.akun')),
                ('id_song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.song')),
            ],
            options={
                'unique_together': {('id_song', 'email_downloader')},
            },
        ),
        migrations.CreateModel(
            name='AKUN_PLAY_SONG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waktu', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_pemain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.akun')),
                ('id_song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.song')),
            ],
            options={
                'unique_together': {('email_pemain', 'id_song', 'waktu')},
            },
        ),
    ]
